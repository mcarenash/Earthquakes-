
<script src='https://api.tiles.mapbox.com/mapbox.js/plugins/leaflet-fullscreen/v0.0.4/Leaflet.fullscreen.min.js'></script>
<link href='https://api.tiles.mapbox.com/mapbox.js/plugins/leaflet-fullscreen/v0.0.4/leaflet.fullscreen.css' rel='stylesheet' />

    <div id='map'></div>
    <script>
      L.mapbox.accessToken = 'pk.eyJ1IjoibWNhcmVuYXNqIiwiYSI6IkNiazBITmsifQ.1RRUCrj495rwKD4odsrYgg';
    </script>
    
    <script type="text/javascript">
      var map; 
      var markers = new L.MarkerClusterGroup();

      map = L.mapbox.map('map', 'examples.map-i875kd35')
      .setView([37.9, -77], 3)
      .addLayer(L.mapbox.tileLayer('examples.h186knp8'));
      L.control.fullscreen().addTo(map);

      var geocoder = L.mapbox.geocoder('mapbox.places-v1');
      geocoder.query('', showMap);

      function showMap(err, data) {
        if (data.lbounds) {
          map.fitBounds(data.lbounds);
            // var marker = L.marker([data.latlng[0], data.latlng[1]]).addTo(map);
          } else if (data.latlng) {
            map.setView([data.latlng[0], data.latlng[1]], 13);
          }
        }
      </script>

      <script>

        $(document).ready(function() {
          var dt = new Date();
          var date2 = dt.getFullYear() + "-" + (dt.getMonth() + 1) + "-" + (dt.getDate()+1);
          var date1 = dt.getFullYear() + "-" + (dt.getMonth() + 1) + "-" + (dt.getDate());


          $.ajax({
            url: "http://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson&starttime="+date1+"&endtime="+date2,
        // url: "http://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson&starttime=2015-01-01&endtime=2015-01-02",      
        dataType: 'json',
        data: '',
        success: function(json){
          window.json = json;
          $date2 = dt.getFullYear() + "-" + (dt.getMonth() + 1) + "-" + dt.getDate();
          $date1 = dt.getFullYear() + "-" + (dt.getMonth() + 1) + "-" + (dt.getDate()-1);

          for (i=0; i<json.features.length; i++) {

           var $mag   = $('<p>').text("Magnitude: " +json.features[i].properties.mag);
           var $place = $('<p>').text("Place: " +json.features[i].properties.place);
           var $date    = $('<p>').text("Date: " +new Date(json.features[i].properties.time));
           var $longitude =  (json.features[i].geometry.coordinates[0]); 
           var $latitude = (json.features[i].geometry.coordinates[1])

           var marker = L.marker([json.features[i].geometry.coordinates[1],(json.features[i].geometry.coordinates[0])],
           {
            icon: L.mapbox.marker.icon({
              'marker-size': 'medium',
              // 'marker-symbol': 'default',
              'marker-color': '#fa0'
            }), 

          })
           // marker.bindPopup("<strong>"+json.features[i].properties.title+"</strong>"+ "<br>"+'Place: ' + json.features[i].properties.place + '<br>' + 'Magnitude: ' + json.features[i].properties.mag  + '<br>' + 'Date: ' + new Date(json.features[i].properties.time) + '<br>'+"<a href='/events'> More Information </a>" + '<br>' + "<%= escape_javascript link_to 'Add to Database', earthquakes_path(), :method => :post %>" );
           var title     = json.features[i].properties.title;
           var time      = json.features[i].properties.time;
           var eqid      = json.features[i].id;
           var longitude = json.features[i].geometry.coordinates[0];
           var latitude  = json.features[i].geometry.coordinates[1];
           var magnitude = json.features[i].properties.mag;
           var place     = json.features[i].properties.place;
           var type      = json.features[i].properties.type;
           var report    = new Date(json.metadata.generated)

           

           <% if user_signed_in? %>
           var user_id = <%= current_user.id %>
           <% else %>
           var user_id = 0 
           <% end %>


           var addDataBase = "<button  data-user_id='" + user_id + "' data-place='" + place + "' data-magnitude='" + magnitude + "' data-longitude='" + longitude + "' data-latitude='" + latitude + "' data-eqid='" + eqid + "' data-title='" + title + "' data-time='" + time +"' onclick='EL.postEarthquake(this)'>Add to Favorites</button>";
            // var addDataBase = "<button  data-place='" + place + "' data-magnitude='" + magnitude + "' data-longitude='" + longitude + "' data-latitude='" + latitude + "' data-eqid='" + eqid + "' data-title='" + title + "' data-time='" + time +"' onclick='EL.postEarthquake(this)'>Add to Database</button>";


            marker.bindPopup("<strong>"+json.features[i].properties.title+"</strong>"+ "<br>"+"Place: " + json.features[i].properties.place + "<br>" + "Magnitude: " + json.features[i].properties.mag  + "<br>" + "Date: " + new Date(json.features[i].properties.time) + "<br>"+ addDataBase);


            // "<a href='javascript:EL.postEarthquake(" + json.features[i].properties.title + ")>Add to Database</a>");
            markers.addLayer(marker);
            map.addLayer(markers);
           // $("#postEarthquake" + String(i)).attr("test", "foobar");
           // var window.dis = $("#postEarthquake" + String(i)) //.attr("onclick", "EL.postEarthquake(" + title + "," + time + ")");
         }

       },

     });
});


$('#query').click(function() {
  markers.clearLayers()

  var dt = new Date();
  var endDate = document.getElementById("endDate").value
  var startDate = document.getElementById("startDate").value;


  $.ajax({
    url: "http://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson&starttime="+startDate+"&endtime="+endDate,
        // url: "http://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson&starttime=2015-01-01&endtime=2015-01-02",      
        dataType: 'json',
        data: '',
        success: function(json){
          var endDate = document.getElementById("endDate").value
          var startDate = document.getElementById("startDate").value;

          for (i=0; i<json.features.length; i++) {

           var $mag = $('<p>').text("Magnitude: " +json.features[i].properties.mag);
           var $place = $('<p>').text("Place: " +json.features[i].properties.place);
           var $date = $('<p>').text("Date: " +new Date(json.features[i].properties.time));
           var $longitude =  (json.features[i].geometry.coordinates[0]); 
           var $latitude = (json.features[i].geometry.coordinates[1])

           var marker = L.marker([json.features[i].geometry.coordinates[1],(json.features[i].geometry.coordinates[0])],
           {
            icon: L.mapbox.marker.icon({
              'marker-size': 'medium',
              // 'marker-symbol': 'default',
              'marker-color': '#fa0'
            }), 

          })

           var title     = json.features[i].properties.title;
           var time      = json.features[i].properties.time;
           var eqid      = json.features[i].id;
           var longitude = json.features[i].geometry.coordinates[0];
           var latitude  = json.features[i].geometry.coordinates[1];
           var magnitude = json.features[i].properties.mag;
           var place     = json.features[i].properties.place;
           var type      = json.features[i].properties.type

           <% if user_signed_in? %>
           var user_id = <%= current_user.id %>
           <% else %>
           var user_id = 0 
           <% end %>
           var addDataBase = "<button  data-user_id='" + user_id + "' data-place='" + place + "' data-magnitude='" + magnitude + "' data-longitude='" + longitude + "' data-latitude='" + latitude + "' data-eqid='" + eqid + "' data-title='" + title + "' data-time='" + time +"' onclick='EL.postEarthquake(this)'>Add to Favorites</button>";

           marker.bindPopup("<strong>"+json.features[i].properties.title+"</strong>"+ "<br>"+"Place: " + json.features[i].properties.place + "<br>" + "Magnitude: " + json.features[i].properties.mag  + "<br>" + "Date: " + new Date(json.features[i].properties.time) + "<br>"+ addDataBase);

           markers.addLayer(marker);
           map.addLayer(markers);

         }

       },

     });
});

</script>
</script>

  <!-- <div id ="magnitude" ng-init="Earthquakes= ">

</div> -->

</body>
</html>